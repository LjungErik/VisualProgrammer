<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:views="clr-namespace:VisualProgrammer.Views"
    xmlns:viewsDesigner="clr-namespace:VisualProgrammer.Views.Designer"
    xmlns:viewsToolbox="clr-namespace:VisualProgrammer.Views.Toolbox"
    xmlns:controls="clr-namespace:VisualProgrammer.Controls"
    xmlns:adorners="clr-namespace:VisualProgrammer.Controls.Adorners"
    xmlns:dropdown="clr-namespace:VisualProgrammer.Controls.Dropdowns"
    xmlns:diagnostics="clr-namespace:System.Diagnostics;assembly=WindowsBase"
    >
    
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="SharedVisualTemplates.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <!-- 
    Include this in binding statements for diagnostics:
    diagnostics:PresentationTraceSources.TraceLevel=High
    -->

    <SolidColorBrush
        x:Key="selectionBorderColor"
        Color="Transparent"
        />

    <SolidColorBrush
        x:Key="selectionBorderBackgroundColor"
        Color="LightBlue"
        Opacity="0.5"
        />

    <Style 
        TargetType="{x:Type viewsDesigner:NodeItem}"
        >

        <!-- Data-bind the parent DesignerView. -->
        <Setter
            Property="ParentDesignerView"
            Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type viewsDesigner:DesignerView}}, Path=.}"
            />

        <!-- Set the position of the node within the canvas. -->
        <Setter
            Property="Canvas.Left"
            Value="{Binding X, RelativeSource={RelativeSource Self}, Mode=TwoWay}"
            />
        <Setter
            Property="Canvas.Top"
            Value="{Binding Y, RelativeSource={RelativeSource Self}, Mode=TwoWay}"
            />

        <!-- Set the z-order of the node within the canvas. -->
        <Setter
            Property="Canvas.ZIndex"
            Value="{Binding ZIndex, RelativeSource={RelativeSource Self}, Mode=TwoWay}"
            />

        <!-- Set defaults for background and border. -->
        <Setter 
            Property="Background" 
            Value="Transparent" 
            />
        <Setter 
            Property="BorderBrush" 
            Value="Transparent" 
            />
        <Setter 
            Property="BorderThickness" 
            Value="1" 
            />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate 
                    TargetType="{x:Type viewsDesigner:NodeItem}"
                    >
                    <Grid>

                        <Border
                            x:Name="selectionBorder"
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Margin="{TemplateBinding Margin}"
                            Padding="{TemplateBinding Padding}"
                            Visibility="{TemplateBinding IsVisible, Converter={StaticResource booleanToVisibilityConverter}}"
                            >

                            <!-- 
                            User-defined node content is presented here. 
                            -->
                            <ContentPresenter />

                        </Border>

                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger 
                            Property="IsSelected"
                            Value="True"
                            >

                            <!-- When the node is selected, set the color of 'selectionBorder' to blue. -->
                            <Setter
                                TargetName="selectionBorder"
                                Property="BorderBrush"
                                Value="{StaticResource selectionBorderColor}"
                                />
                        </Trigger>

                        <Trigger 
                            Property="IsSelected"
                            Value="True"
                            >

                            <!-- When the node is selected, set the background of 'selectionBorder' to light blue. -->
                            <Setter
                                TargetName="selectionBorder"
                                Property="Background"
                                Value="{StaticResource selectionBorderBackgroundColor}"
                                />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type viewsDesigner:ConnectorItem}">

        <!-- Data-bind the parent DesignerView. -->
        <Setter
            Property="ParentDesignerView"
            Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type viewsDesigner:DesignerView}}, Path=.}"
            />

        <!-- Data-bind the parent NodeItem. -->
        <Setter
            Property="ParentNodeItem"
            Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type viewsDesigner:NodeItem}}, Path=.}"
            />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate 
                    TargetType="{x:Type viewsDesigner:ConnectorItem}"
                    >

                    <!-- Application-defined connector content is presented here. -->
                    <ContentPresenter />

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="noScrollViewerListBoxStyle" TargetType="ListBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <!-- 
                    The ListBoxItems are presented in a Canvas.
                    'IsItemsHost' is set to 'True' so that the ListBox
                    uses the Canvas as the container for its items.
                    -->
                    <Canvas 
                        IsItemsHost="True"
                        />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style 
        TargetType="{x:Type viewsDesigner:DesignerView}"
        >

        <Setter 
            Property="Template"
            >
            <Setter.Value>
                <ControlTemplate 
                    TargetType="{x:Type viewsDesigner:DesignerView}"
                    >
                    <Border 
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        >
                        <Grid>
                            
                            <!-- Control that holds the temperary nodes -->
                            <viewsDesigner:NodeItemsControl
                                x:Name="PART_TemperaryNodesItemsControl"
                                ItemsSource="{TemplateBinding TemperaryNodes}"
                                SelectionMode="Extended"
                                ItemTemplate="{TemplateBinding NodeItemTemplate}"
                                ItemContainerStyle="{TemplateBinding NodeItemContainerStyle}"
                                Visibility="Hidden"
                                />

                            <!-- Control that presents the nodes. -->
                            <viewsDesigner:NodeItemsControl
                                x:Name="PART_NodeItemsControl"
                                ItemsSource="{TemplateBinding Nodes}"
                                SelectionMode="Extended"
                                Style="{StaticResource noScrollViewerListBoxStyle}"
                                ItemTemplate="{TemplateBinding NodeItemTemplate}"
                                ItemTemplateSelector="{TemplateBinding NodeItemTemplateSelector}"
                                ItemContainerStyle="{TemplateBinding NodeItemContainerStyle}"
                                />

                            <!-- Control that presents the connections between nodes. -->
                            <ItemsControl
                                x:Name="PART_ConnectionItemsControl"
                                ItemsSource="{TemplateBinding Connections}"
                                ItemTemplate="{TemplateBinding ConnectionItemTemplate}"
                                ItemTemplateSelector="{TemplateBinding ConnectionItemTemplateSelector}"
                                ItemContainerStyle="{TemplateBinding ConnectionItemContainerStyle}"
                                >
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <!-- Connections are presented in a Canvas. -->
                                        <Canvas />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>

                            <!--
       +                     This Canvas and Border are used as a very simple way to render a drag selection rectangle.
                            -->
                            <Canvas
                                x:Name="PART_DragSelectionCanvas"
                                Visibility="Collapsed"
                                >
                                <Border 
                                    x:Name="PART_DragSelectionBorder"
                                    BorderBrush="Blue"
                                    BorderThickness="1"
                                    Background="LightBlue"
                                    CornerRadius="1"
                                    Opacity="0.5"
                                    />
                            </Canvas>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--
    ToolboxItem style
    -->
    <Style 
        TargetType="{x:Type viewsToolbox:ToolboxItem}">
        <Setter Property="Margin" 
                Value="5, 0, 5, 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type viewsToolbox:ToolboxItem}">
                    <ContentPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--
    ToolboxView style    
    -->
    <Style 
        TargetType="{x:Type viewsToolbox:ToolboxView}">
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type viewsToolbox:ToolboxView}">

                    <Border 
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        >
                        <Grid>
                            <viewsToolbox:ToolboxItemsControl
                            x:Name="PART_ToolboxItemsControl"
                            ItemsSource="{TemplateBinding Tools}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                        >
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel ItemHeight="74" ItemWidth="74" IsItemsHost="True"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>

                            </viewsToolbox:ToolboxItemsControl>

                            <Grid Visibility="{TemplateBinding IsNodeDragged, Converter={StaticResource booleanToVisibilityConverter}}">
                                <Rectangle Fill="White" Margin="0" Opacity="0.8"/>
                                <Image x:Name="trashClosed" HorizontalAlignment="Center" Height="64" Margin="0,18,0,0" VerticalAlignment="Top" Width="64" Source="Resources/Images/trash_can_closed.png" 
                                       Visibility="{TemplateBinding IsNodeDraggedOver, Converter={StaticResource invertedBooleanToVisibilityConverter}}"/>
                                <Image x:Name="trashOpen" HorizontalAlignment="Center" Height="64" Margin="418,18,418,0" VerticalAlignment="Top" Width="64" Source="Resources/Images/trash_can_open.png" 
                                       Visibility="{TemplateBinding IsNodeDraggedOver, Converter={StaticResource booleanToVisibilityConverter}}"/>
                            </Grid>
                        </Grid>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
    </Style>
    
    <!--
    PropertyEditor
    -->
    <Style
        TargetType="{x:Type controls:PropertyEditor}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:PropertyEditor}">
                    <Grid>
                        <Grid HorizontalAlignment="Left" VerticalAlignment="Top" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1"/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="1"/>
                            </Grid.ColumnDefinitions>
                            <Rectangle Fill="Black" Grid.RowSpan="2"/>
                            <Rectangle Fill="Black" Grid.ColumnSpan="3"/>
                            <Rectangle Fill="Silver" Margin="0,0,0,2" Grid.Column="1" Grid.Row="1" />
                            <Rectangle Fill="Black" Grid.RowSpan="2" Grid.Column="2"/>
                            <TextBlock TextWrapping="Wrap" TextAlignment="Center" Foreground="#FF3C3C3C" FontSize="12" FontFamily="Segoe UI Light" Grid.Column="1" Grid.RowSpan="2" Text="{TemplateBinding Text}"/>
                        </Grid>
                        
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
    </Style>

    <Style
        TargetType="{x:Type dropdown:MultiLineDropDown}">
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dropdown:MultiLineDropDown}">
                    <Canvas>
                        <Rectangle Fill="#FFCDCDCD" Height="20" Canvas.Left="95" Stroke="Black" Canvas.Top="10" Width="15" StrokeThickness="0" RadiusY="2" RadiusX="2"/>
                        <Rectangle Height="120" Canvas.Left="0" Canvas.Top="10" Fill="#FFCDCDCD" RadiusX="3" RadiusY="3" Width="100"/>
                        <Polygon Fill="#FFCDCDCD" Height="10" Canvas.Left="37.5" Stretch="Fill" Width="25" HorizontalAlignment="Center" VerticalAlignment="Center" Points="0,10 7.5,0 15,10" Canvas.Top="0"/>
                        <TextBox 
                            x:Name="PART_MultiLineTextBox"
                            Height="116" 
                            Canvas.Left="2" 
                            TextWrapping="Wrap" 
                            Text="{Binding Path=Value, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" 
                            Canvas.Top="12" 
                            Width="96"
                            VerticalScrollBarVisibility="Auto"/>

                        <Canvas x:Name="PART_OkButton" Height="8" Canvas.Left="99" Canvas.Top="12" Width="10" Background="Transparent">
                            <Path Data="M9.625,0.29166667 L3.9583333,6.9583333" Fill="#FFCDCDCD" Height="8" Canvas.Left="3" Stretch="Fill" Stroke="#FF464646" Canvas.Top="0" Width="7"/>
                            <Path Data="M4.0833333,7.6666667 L0.041666667,3.9166667" Fill="#FFCDCDCD" Height="4" Canvas.Left="0.042" Stretch="Fill" Stroke="#FF464646" Canvas.Top="4.126" Width="4.5"/>
                        </Canvas>
                        <Canvas x:Name="PART_CancelButton" Height="8" Canvas.Left="99" Canvas.Top="21" Width="10" Background="Transparent">
                            <Path Data="M0.16666667,0.16666667 L8.9583333,7.0416667" Fill="#FFCDCDCD" Height="8" Canvas.Left="1" Stretch="Fill" Stroke="#FF464646" Canvas.Top="0" Width="8"/>
                            <Path Data="M9.5833333,0.41666667 L-0.16666667,7.2083333" Fill="#FFCDCDCD" Height="8" Canvas.Left="1" Stretch="Fill" Stroke="#FF464646" Canvas.Top="0" Width="8"/>
                        </Canvas>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style
        TargetType="{x:Type dropdown:SliderDropDown}">
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dropdown:SliderDropDown}">
                    <Canvas>
                        <Rectangle Fill="#FFCDCDCD" Height="20" Canvas.Left="25" Stroke="Black" Canvas.Top="10" Width="15" StrokeThickness="0" RadiusY="2" RadiusX="2"/>
                        <Rectangle Fill="#FFCDCDCD" Height="90" Canvas.Left="0" RadiusY="3" RadiusX="3" Canvas.Top="10" Width="30"/>
                        <Polygon Fill="#FFCDCDCD" Height="10" Canvas.Left="7.5" Stretch="Fill" Width="15" HorizontalAlignment="Center" VerticalAlignment="Center" Points="0,10 7.5,0 15,10" Canvas.Top="0"/>
                        <TextBox 
                            x:Name="PART_SliderValueTextbox"
                            Height="18.5" 
                            Canvas.Left="2" 
                            TextWrapping="Wrap" 
                            Text="{Binding Value, ElementName=PART_Slider, UpdateSourceTrigger=PropertyChanged}" 
                            Canvas.Top="12" 
                            Width="26"
                            HorizontalAlignment="Center" 
                            VerticalAlignment="Center" 
                            FlowDirection="RightToLeft"/>
                        <Slider 
                            x:Name="PART_Slider" 
                            Height="66" 
                            Canvas.Left="6" 
                            Canvas.Top="32"
                            Width="18" 
                            Orientation="Vertical" 
                            SmallChange="1" 
                            LargeChange="10"
                            TickFrequency="1"
                            IsSnapToTickEnabled="True"
                            Value="{Binding Path=Value, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                            Maximum="180"/>

                        <Canvas x:Name="PART_OkButton" Height="8" Canvas.Left="29" Canvas.Top="12" Width="10" Background="Transparent">
                            <Path Data="M9.625,0.29166667 L3.9583333,6.9583333" Fill="#FFCDCDCD" Height="8" Canvas.Left="3" Stretch="Fill" Stroke="#FF464646" Canvas.Top="0" Width="7"/>
                            <Path Data="M4.0833333,7.6666667 L0.041666667,3.9166667" Fill="#FFCDCDCD" Height="4" Canvas.Left="0.042" Stretch="Fill" Stroke="#FF464646" Canvas.Top="4.126" Width="4.5"/>
                        </Canvas>
                        <Canvas x:Name="PART_CancelButton" Height="8" Canvas.Left="29" Canvas.Top="21" Width="10" Background="Transparent">
                            <Path Data="M0.16666667,0.16666667 L8.9583333,7.0416667" Fill="#FFCDCDCD" Height="8" Canvas.Left="1" Stretch="Fill" Stroke="#FF464646" Canvas.Top="0" Width="8"/>
                            <Path Data="M9.5833333,0.41666667 L-0.16666667,7.2083333" Fill="#FFCDCDCD" Height="8" Canvas.Left="1" Stretch="Fill" Stroke="#FF464646" Canvas.Top="0" Width="8"/>
                        </Canvas>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style
        TargetType="{x:Type dropdown:SelectionDropDown}">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dropdown:SelectionDropDown}">
                    <Canvas>
                        <Rectangle Fill="#FFCDCDCD" Height="20" Canvas.Left="70" Stroke="Black" Canvas.Top="10" Width="15" StrokeThickness="0" RadiusY="2" RadiusX="2"/>
                        <Rectangle Fill="#FFCDCDCD" Height="30" RadiusY="3" RadiusX="3" Canvas.Top="10" Width="75"/>
                        <Polygon Fill="#FFCDCDCD" Height="10" Canvas.Left="25" Stretch="Fill" Width="20" HorizontalAlignment="Center" VerticalAlignment="Center" Points="0,10 7.5,0 15,10" Canvas.Top="0"/>
                        <ComboBox 
                            x:Name="PART_SelectionComboBox"
                            Height="26" 
                            Canvas.Left="2" 
                            Canvas.Top="12" 
                            Width="71" 
                            SelectedIndex="{Binding Path=Value, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}">
                            <ComboBoxItem/>
                            <ComboBoxItem Content="Servo 1"/>
                            <ComboBoxItem Content="Servo 2"/>
                            <ComboBoxItem Content="Servo 3"/>
                            <ComboBoxItem Content="Servo 4"/>
                            <ComboBoxItem Content="Servo 5"/>
                            <ComboBoxItem Content="Servo 6"/>
                        </ComboBox>
                        <Canvas x:Name="PART_OkButton" Height="8" Canvas.Left="74" Canvas.Top="12" Width="10" Background="Transparent">
                            <Path Data="M9.625,0.29166667 L3.9583333,6.9583333" Fill="#FFCDCDCD" Height="8" Canvas.Left="3" Stretch="Fill" Stroke="#FF464646" Canvas.Top="0" Width="7"/>
                            <Path Data="M4.0833333,7.6666667 L0.041666667,3.9166667" Fill="#FFCDCDCD" Height="4" Canvas.Left="0.042" Stretch="Fill" Stroke="#FF464646" Canvas.Top="4.126" Width="4.5"/>
                        </Canvas>
                        <Canvas x:Name="PART_CancelButton" Height="8" Canvas.Left="74" Canvas.Top="21" Width="10" Background="Transparent">
                            <Path Data="M0.16666667,0.16666667 L8.9583333,7.0416667" Fill="#FFCDCDCD" Height="8" Canvas.Left="1" Stretch="Fill" Stroke="#FF464646" Canvas.Top="0" Width="8"/>
                            <Path Data="M9.5833333,0.41666667 L-0.16666667,7.2083333" Fill="#FFCDCDCD" Height="8" Canvas.Left="1" Stretch="Fill" Stroke="#FF464646" Canvas.Top="0" Width="8"/>
                        </Canvas>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
    </Style>

</ResourceDictionary>
