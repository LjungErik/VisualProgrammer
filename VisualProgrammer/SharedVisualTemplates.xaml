<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converter="clr-namespace:VisualProgrammer.Utilities.Converter"
    xmlns:viewsDesigner="clr-namespace:VisualProgrammer.Views.Designer"
    xmlns:dropdown="clr-namespace:VisualProgrammer.Controls.Dropdowns"
    >
    
    <!-- Converters as static resources -->
    <BooleanToVisibilityConverter
        x:Key="booleanToVisibilityConverter" 
        />
    
    <converter:InvertedBooleanToVisibilityConverter
        x:Key="invertedBooleanToVisibilityConverter"
        />
    
    <converter:StringToDegreesConverter
        x:Key="stringToDegreesConverter"
        />
    
    <converter:StringToServoNumberConverter
        x:Key="stringToServoNumberConverter"
        />
    
    <converter:WriteTypeToColorConverter
        x:Key="writeTypeToColorConverter"
        />
    
    <converter:StatusTypeToColorConverter
        x:Key="statusTypeToColorConverter"
        />
    
    <converter:StatusTypeToStatusStringConverter
        x:Key="statusTypeToStatusStringConverter"
        />
    
    <converter:StatusTypeToBooleanConverter
        x:Key="statusTypeToBooleanConverter"
        />
 
    <!-- The border brush for nodes. -->
    <SolidColorBrush
        x:Key="nodeBorderBrush"
        Color="Black"
        />

    <!-- The fill brush for nodes. -->
    <LinearGradientBrush
        x:Key="nodeFillBrush"
        StartPoint="0,0"
        EndPoint="0,1"
        >
        <GradientStop Color="White" Offset="0" />
        <GradientStop Color="#7FC9FF" Offset="0.6" />
    </LinearGradientBrush>

    <!-- The brush for connections. -->
    <SolidColorBrush
        x:Key="connectionBrush"
        Color="Black"
        />
    
    <!-- The brush for connectors. -->
    <SolidColorBrush
        x:Key="connectorBackgroundBrush"
        Color="Transparent"
        />

    <!--
    Define a style for 'NodeItem'.
    
    Binds 'X' and 'Y' in the view-model (the 'NodeViewModel' class)
    to 'X' and 'Y' in the NodeItem class.
    
    This sets the position of the node within the Canvas.
    -->
    <Style TargetType="{x:Type viewsDesigner:NodeItem}">
        <Setter
            Property="X"
            Value="{Binding X}"
            />
        <Setter
            Property="Y"
            Value="{Binding Y}"
            />
        <Setter
            Property="ZIndex"
            Value="{Binding ZIndex}"
            />
        <Setter
            Property="IsVisible"
            Value="{Binding IsVisible}"
            />
        <Setter
            Property="IsSelected"
            Value="{Binding IsSelected}"
            />
        <Setter
            Property="IsPressed"
            Value="{Binding IsPressed}"
            />
    </Style>
    
    <!-- 
    A data-template that defines the UI for input connectors.
    -->
    <DataTemplate
        x:Key="inputConnectorTemplate"
        >
        <Grid
            Margin="15,5,0,0"
            >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!-- The 'ConnectorItem' or anchor point for the connector. -->
            <viewsDesigner:ConnectorItem 
                Grid.Column="0"
                Width="15"
                Height="15"
                Cursor="Hand"                    
                />
        </Grid>
    </DataTemplate>

    <!-- 
    A data-template that defines the UI for output connectors.
    -->
    <DataTemplate
        x:Key="outputConnectorTemplate"
        >
        <Grid
            HorizontalAlignment="Left"
            Margin="0,5,0,0"
            >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <Grid
                Grid.Column="1"
                Cursor="Hand"
                >

                <!-- The 'ConnectorItem' or anchor point for the connector. -->
                <viewsDesigner:ConnectorItem 
                    Width="15"
                    Height="15"
                    HorizontalAlignment="Left"
                    Margin="17,0,0,0"/>
                
                <Image
                    Source="Resources/Images/connector.png"
                    IsHitTestVisible="False"
                    Margin="21,0,0,0"
                    Visibility="{Binding IsConnectionAttached, Converter={StaticResource invertedBooleanToVisibilityConverter}}"
                    />
                    
                <!-- Show a black dot at the start of the arrow when connected. -->
                <Rectangle
                    Visibility="{Binding IsConnectionAttached, Converter={StaticResource booleanToVisibilityConverter}}"
                    Height="8"
                    Width="8"
                    Fill="{StaticResource connectionBrush}"
                    IsHitTestVisible="False"
                    Margin="0,0,0,0"
                    />
            </Grid>
        </Grid>
    </DataTemplate>
    
</ResourceDictionary>